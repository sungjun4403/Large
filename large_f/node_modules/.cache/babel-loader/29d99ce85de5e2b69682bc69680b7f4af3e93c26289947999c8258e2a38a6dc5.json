{"ast":null,"code":"import { ref } from '@vue/reactivity';\nconst moment = require('moment');\nlet colors = ['#A8F368', '#B6CB66', '#C3A365', '#D17B63', '#DE5361', '#EC2B60', '#F9035E'];\n\n//now - time = icon bcg color\nexport default {\n  props: ['IconHeight', 'time'],\n  setup() {\n    const now = ref(\"\");\n    const IconTitle = ref(\"none\");\n    const killInterval = ref(false);\n    return {\n      now,\n      IconTitle,\n      killInterval\n    };\n  },\n  mounted() {\n    this.setIconHeight();\n    this.now = moment().locale('ko').format('LTS');\n    var timeInterval = setInterval(() => {\n      this.now = moment().locale('ko').format('LTS');\n      this.setIconColor();\n      if (killInterval == true) {\n        clearInterval();\n      }\n    }, 500);\n  },\n  methods: {\n    setIconHeight() {\n      const StatusIcon = document.getElementById(\"StatusIcon\");\n      StatusIcon.style.width = this.IconHeight;\n      StatusIcon.style.height = this.IconHeight;\n    },\n    setIconColor() {\n      const fromNow = moment(this.time).fromNow();\n      this.IconTitle = fromNow;\n      console.log();\n      if (fromNow.split(\" \")[1] == \"hours\") {\n        console.log(\"HOW\");\n      }\n      const i = 0;\n      const StatusIcon = document.getElementById(\"StatusIcon\");\n      StatusIcon.style.backgroundColor = colors[i];\n    }\n  },\n  updated() {},\n  beforeUnmount() {\n    clearInterval(timeInterval);\n    console.log('UNMOOUNTED');\n  }\n};","map":{"version":3,"mappings":"AASA,SAASA,GAAE,QAAS,iBAAgB;AACpC,MAAMC,MAAK,GAAIC,OAAO,CAAC,QAAQ;AAC/B,IAAIC,MAAK,GAAI,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;;AAGzF;AACA,eAAe;EACXC,KAAK,EAAE,CAAC,YAAY,EAAE,MAAM,CAAC;EAC7BC,KAAK,GAAG;IACJ,MAAMC,GAAE,GAAIN,GAAG,CAAC,EAAE;IAClB,MAAMO,SAAQ,GAAIP,GAAG,CAAC,MAAM;IAE5B,MAAMQ,YAAW,GAAIR,GAAG,CAAC,KAAK;IAC9B,OAAO;MACHM,GAAG;MAAEC,SAAS;MAAEC;IACpB;EACJ,CAAC;EACDC,OAAO,GAAG;IACN,IAAI,CAACC,aAAa,EAAC;IACnB,IAAI,CAACJ,GAAE,GAAIL,MAAM,EAAE,CAACU,MAAM,CAAC,IAAI,CAAC,CAACC,MAAM,CAAC,KAAK;IAE7C,IAAIC,YAAW,GAAIC,WAAW,CAAC,MAAK;MAChC,IAAI,CAACR,GAAE,GAAIL,MAAM,EAAE,CAACU,MAAM,CAAC,IAAI,CAAC,CAACC,MAAM,CAAC,KAAK;MAC7C,IAAI,CAACG,YAAY,EAAC;MAElB,IAAIP,YAAW,IAAK,IAAI,EAAE;QACtBQ,aAAa,EAAC;MAClB;IACJ,CAAC,EAAE,GAAG;EACV,CAAC;EACDC,OAAO,EAAE;IACLP,aAAa,GAAG;MACZ,MAAMQ,UAAS,GAAIC,QAAQ,CAACC,cAAc,CAAC,YAAY;MACvDF,UAAU,CAACG,KAAK,CAACC,KAAI,GAAI,IAAI,CAACC,UAAS;MACvCL,UAAU,CAACG,KAAK,CAACG,MAAK,GAAI,IAAI,CAACD,UAAS;IAC5C,CAAC;IACDR,YAAY,GAAG;MACX,MAAMU,OAAM,GAAIxB,MAAM,CAAC,IAAI,CAACyB,IAAI,CAAC,CAACD,OAAO,EAAC;MAC1C,IAAI,CAAClB,SAAQ,GAAIkB,OAAM;MACvBE,OAAO,CAACC,GAAG,EAAC;MACZ,IAAIH,OAAO,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;QAClCF,OAAO,CAACC,GAAG,CAAC,KAAK;MACrB;MAEA,MAAME,IAAI;MACV,MAAMZ,UAAS,GAAIC,QAAQ,CAACC,cAAc,CAAC,YAAY;MACvDF,UAAU,CAACG,KAAK,CAACU,eAAc,GAAI5B,MAAM,CAAC2B,CAAC;IAC/C;EACJ,CAAC;EACDE,OAAO,GAAG,CAEV,CAAC;EACDC,aAAa,GAAG;IACZjB,aAAa,CAACH,YAAY;IAC1Bc,OAAO,CAACC,GAAG,CAAC,YAAY;EAC5B;AACJ","names":["ref","moment","require","colors","props","setup","now","IconTitle","killInterval","mounted","setIconHeight","locale","format","timeInterval","setInterval","setIconColor","clearInterval","methods","StatusIcon","document","getElementById","style","width","IconHeight","height","fromNow","time","console","log","split","i","backgroundColor","updated","beforeUnmount"],"sourceRoot":"","sources":["/Users/sungjun/Documents/Large/large_f/src/components/User/components/StatusIcon.vue"],"sourcesContent":["<template>\n    <div id=\"StatusIconBody\" >\n        <div id=\"StatusIcon\" :title=\"IconTitle\"></div>\n        <span>{{now}}</span>\n    </div>\n    \n</template>\n\n<script>\nimport { ref } from '@vue/reactivity'\nconst moment = require('moment')\nlet colors = ['#A8F368', '#B6CB66', '#C3A365', '#D17B63', '#DE5361', '#EC2B60', '#F9035E']\n\n\n//now - time = icon bcg color\nexport default {\n    props: ['IconHeight', 'time'],\n    setup() {\n        const now = ref(\"\")\n        const IconTitle = ref(\"none\")\n        \n        const killInterval = ref(false)\n        return {\n            now, IconTitle, killInterval\n        }\n    },\n    mounted() {\n        this.setIconHeight()\n        this.now = moment().locale('ko').format('LTS')        \n        \n        var timeInterval = setInterval(()=> {\n            this.now = moment().locale('ko').format('LTS')\n            this.setIconColor()\n\n            if (killInterval == true) {\n                clearInterval()\n            }\n        }, 500)\n    },\n    methods: {\n        setIconHeight() {\n            const StatusIcon = document.getElementById(\"StatusIcon\")    \n            StatusIcon.style.width = this.IconHeight\n            StatusIcon.style.height = this.IconHeight\n        },\n        setIconColor() {\n            const fromNow = moment(this.time).fromNow()\n            this.IconTitle = fromNow\n            console.log()\n            if (fromNow.split(\" \")[1] == \"hours\") {\n                console.log(\"HOW\")\n            }\n            \n            const i = 0\n            const StatusIcon = document.getElementById(\"StatusIcon\")        \n            StatusIcon.style.backgroundColor = colors[i]\n        },\n    },\n    updated() {\n        \n    },\n    beforeUnmount() {\n        clearInterval(timeInterval)\n        console.log('UNMOOUNTED')\n    }\n}\n</script>\n\n<style scoped>\n    #StatusIcon {\n        width: 100px;\n        height: 100px;\n        background-color: #A8F368;\n        border-radius: 50%;\n    }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}