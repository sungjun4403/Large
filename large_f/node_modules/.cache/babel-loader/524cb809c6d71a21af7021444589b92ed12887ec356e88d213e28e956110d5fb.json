{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from \"@vue/reactivity\";\nconst axios = require('axios').default;\nexport default {\n  props: [\"IfTokenIsYours\"],\n  setup() {\n    let gitID = localStorage.gitID;\n    const templates = ref([]);\n    const toEditTemplateNumber = ref(0);\n    const toEditTemplateName = ref(\"\");\n    const toEditTemplate = ref(\"\");\n    const toEditHotKey = ref(\"\");\n    const templateAddCount = ref(0);\n    const templateDeleteCount = ref(0);\n    return {\n      gitID,\n      templates,\n      toEditTemplateNumber,\n      toEditTemplateName,\n      toEditTemplate,\n      toEditHotKey,\n      templateAddCount,\n      templateDeleteCount\n    };\n  },\n  mounted() {\n    this.getAllTemplates();\n    // var inSlash = false \n    // var textarea = document.getElementById(\"textarea\")\n    // // var textarea = document.textarea\n    // textarea.addEventListener('keydown', (e) => {\n    //     if (e.key == \"/\") {\n    //         inSlash = true\n    //     }\n    //     if (inSlash == true) {\n    //         setTimeout(function () {\n    //             console.log(textarea.value.indexOf(\"/http\"))\n    //         }, 100)\n    //     }\n    //     if (e.key == \" \") {\n    //         inSlash = false\n    //     }\n    // })\n  },\n\n  methods: {\n    getAllTemplates() {\n      axios({\n        url: 'http://localhost:8080/template/' + localStorage.getItem(\"gitID\"),\n        method: 'get',\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem(\"AccessToken\")\n        }\n      }).then(response => {\n        response.data.forEach(element => {\n          this.templates.push(element);\n        });\n      }).then(() => {\n        this.setDefaultInput();\n      });\n    },\n    setDefaultInput() {\n      this.templates.forEach(template => {\n        document.getElementById(\"templateNumber\" + template.id).value = template.templateNumber;\n        document.getElementById(\"templateName\" + template.id).value = template.templateName;\n        document.getElementById(\"template\" + template.id).value = template.template;\n        document.getElementById(\"hotKey\" + template.id).value = template.hotKey;\n      });\n    },\n    setTemplateNumberInput() {},\n    removeTemplate() {},\n    addTemplate(lastNumber) {\n      this.templateAddCount += 1;\n      const templateToAdd = {\n        id: 'Add' + this.templateAddCount,\n        gitID: this.gitID,\n        templateName: '',\n        templateNumber: lastNumber + 1,\n        template: '',\n        hotKey: ''\n      };\n      console.log(templateToAdd.templateNumber);\n      this.templates.push(templateToAdd);\n    },\n    templateInput(templateId) {\n      document.getElementById(\"template\" + templateId);\n    },\n    biggerTemplateInput() {}\n  }\n};","map":{"version":3,"mappings":";AAgCA,SAASA,GAAE,QAAS,iBAAgB;AACpC,MAAMC,KAAI,GAAIC,OAAO,CAAC,OAAO,CAAC,CAACC,OAAO;AAEtC,eAAgB;EACZC,KAAK,EAAE,CAAC,gBAAgB,CAAC;EACzBC,KAAK,GAAG;IACJ,IAAIC,KAAI,GAAIC,YAAY,CAACD,KAAI;IAE7B,MAAME,SAAQ,GAAIR,GAAG,CAAC,EAAE;IAExB,MAAMS,oBAAmB,GAAIT,GAAG,CAAC,CAAC;IAClC,MAAMU,kBAAiB,GAAIV,GAAG,CAAC,EAAE;IACjC,MAAMW,cAAa,GAAIX,GAAG,CAAC,EAAE;IAC7B,MAAMY,YAAW,GAAIZ,GAAG,CAAC,EAAE;IAE3B,MAAMa,gBAAe,GAAIb,GAAG,CAAC,CAAC;IAC9B,MAAMc,mBAAkB,GAAId,GAAG,CAAC,CAAC;IAEjC,OAAO;MACHM,KAAK;MACLE,SAAS;MACTC,oBAAoB;MAAEC,kBAAkB;MAAEC,cAAc;MAAEC,YAAY;MACtEC,gBAAgB;MAAEC;IAErB;EACL,CAAC;EACDC,OAAO,GAAG;IACN,IAAI,CAACC,eAAe,EAAC;IACrB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC;;EACDC,OAAO,EAAE;IACLD,eAAe,GAAG;MACdf,KAAK,CAAC;QACFiB,GAAG,EAAE,iCAAgC,GAAIX,YAAY,CAACY,OAAO,CAAC,OAAO,CAAC;QACtEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,eAAc,EAAI,SAAQ,GAAId,YAAY,CAACY,OAAO,CAAC,aAAa;QACpE;MACJ,CAAC,CAAC,CAACG,IAAI,CAAEC,QAAQ,IAAK;QAClBA,QAAQ,CAACC,IAAI,CAACC,OAAO,CAACC,OAAM,IAAK;UAC7B,IAAI,CAAClB,SAAS,CAACmB,IAAI,CAACD,OAAO;QAC/B,CAAC,CAAC;MACN,CAAC,CAAC,CAACJ,IAAI,CAAC,MAAK;QACT,IAAI,CAACM,eAAe,EAAC;MACzB,CAAC;IAEL,CAAC;IACDA,eAAe,GAAG;MACd,IAAI,CAACpB,SAAS,CAACiB,OAAO,CAAEI,QAAQ,IAAK;QACjCC,QAAQ,CAACC,cAAc,CAAC,gBAAe,GAAIF,QAAQ,CAACG,EAAE,CAAC,CAACC,KAAI,GAAIJ,QAAQ,CAACK,cAAa;QACtFJ,QAAQ,CAACC,cAAc,CAAC,cAAa,GAAIF,QAAQ,CAACG,EAAE,CAAC,CAACC,KAAI,GAAIJ,QAAQ,CAACM,YAAW;QAClFL,QAAQ,CAACC,cAAc,CAAC,UAAS,GAAIF,QAAQ,CAACG,EAAE,CAAC,CAACC,KAAI,GAAIJ,QAAQ,CAACA,QAAO;QAC1EC,QAAQ,CAACC,cAAc,CAAC,QAAO,GAAIF,QAAQ,CAACG,EAAE,CAAC,CAACC,KAAI,GAAIJ,QAAQ,CAACO,MAAK;MAC1E,CAAC;IACL,CAAC;IACDC,sBAAsB,GAAG,CAEzB,CAAC;IACDC,cAAc,GAAG,CACjB,CAAC;IACDC,WAAW,CAACC,UAAU,EAAE;MACpB,IAAI,CAAC3B,gBAAe,IAAK;MACzB,MAAM4B,aAAY,GAAI;QAClBT,EAAE,EAAE,KAAI,GAAI,IAAI,CAACnB,gBAAgB;QACjCP,KAAK,EAAE,IAAI,CAACA,KAAK;QACjB6B,YAAY,EAAE,EAAE;QAChBD,cAAc,EAAEM,UAAS,GAAI,CAAC;QAC9BX,QAAQ,EAAE,EAAE;QACZO,MAAM,EAAE;MACR;MACJM,OAAO,CAACC,GAAG,CAACF,aAAa,CAACP,cAAc;MACxC,IAAI,CAAC1B,SAAS,CAACmB,IAAI,CAACc,aAAa;IAErC,CAAC;IACDG,aAAa,CAACC,UAAU,EAAE;MACtBf,QAAQ,CAACC,cAAc,CAAC,UAAS,GAAIc,UAAU;IACnD,CAAC;IACDC,mBAAmB,GAAG,CAEtB;EACJ;AACJ,CAAC","names":["ref","axios","require","default","props","setup","gitID","localStorage","templates","toEditTemplateNumber","toEditTemplateName","toEditTemplate","toEditHotKey","templateAddCount","templateDeleteCount","mounted","getAllTemplates","methods","url","getItem","method","headers","then","response","data","forEach","element","push","setDefaultInput","template","document","getElementById","id","value","templateNumber","templateName","hotKey","setTemplateNumberInput","removeTemplate","addTemplate","lastNumber","templateToAdd","console","log","templateInput","templateId","biggerTemplateInput"],"sourceRoot":"","sources":["/Users/sungjun/Documents/Large/large_f/src/components/NavBar/Preferences/Template/Template.vue"],"sourcesContent":["<template>\n    <div>\n        <div id=\"TemplateBody\" v-if=\"IfTokenIsYours == true\">\n            <br>\n            Templates\n\n            <div id=\"\" v-for=\"(template, index) in templates\" :key=\"template.id\">                \n                \n                <input :id=\"'templateNumber' + template.id\" class=\"templateNumber\" size=\"1\" >\n                <input :id=\"'templateName' + template.id\" class=\"templateName\" size=\"10\">\n                <input :id=\"'template' + template.id\" class=\"template\" size=\"30\" @click=\"templateInput(template.id)\">\n                <input :id=\"'hotKey' + template.id\" class=\"hotKey\" size=\"15\">\n\n                <img @click=\"removeTemplate()\" id=\"removeTemplateImg\" src=\"../../../../../public/assets/image/removeTemplate.png\" alt=\"removeTemplate\">\n                <!-- <div @click=\"removeTemplate()\"><img @click=\"removeTemplate()\" id=\"addTemplateImg\" src=\"\" alt=\"addTemplateImg\"></div> -->\n                 <img v-if=\"index == templates.length-1\" @click=\"addTemplate(template.templateNumber)\" id=\"addTemplateImg\" src=\"../../../../../public/assets/image/addTemplate.png\" alt=\"addTemplate\">\n                <br>\n            </div>\n\n            <br>\n\n            <!-- <button @click=\"setDefaultInput()\">button</button> -->\n            <!-- <textarea id=\"textarea\" cols=\"30\" rows=\"10\"></textarea> -->\n        </div>    \n\n        <div v-else-if=\"IfTokenIsYours == false\">\n            <AccessDenied />\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref } from \"@vue/reactivity\"\nconst axios = require('axios').default;\n\nexport default ({\n    props: [\"IfTokenIsYours\"],\n    setup() {\n        let gitID = localStorage.gitID\n\n        const templates = ref([])\n\n        const toEditTemplateNumber = ref(0)\n        const toEditTemplateName = ref(\"\")\n        const toEditTemplate = ref(\"\")\n        const toEditHotKey = ref(\"\")\n\n        const templateAddCount = ref(0)\n        const templateDeleteCount = ref(0)\n\n        return { \n            gitID, \n            templates,\n            toEditTemplateNumber, toEditTemplateName, toEditTemplate, toEditHotKey,\n            templateAddCount, templateDeleteCount,\n\n         }\n    },\n    mounted() {\n        this.getAllTemplates()\n        // var inSlash = false \n        // var textarea = document.getElementById(\"textarea\")\n        // // var textarea = document.textarea\n        // textarea.addEventListener('keydown', (e) => {\n        //     if (e.key == \"/\") {\n        //         inSlash = true\n        //     }\n        //     if (inSlash == true) {\n        //         setTimeout(function () {\n        //             console.log(textarea.value.indexOf(\"/http\"))\n        //         }, 100)\n        //     }\n        //     if (e.key == \" \") {\n        //         inSlash = false\n        //     }\n        // })\n    },\n    methods: {\n        getAllTemplates() {\n            axios({\n                url: 'http://localhost:8080/template/' + localStorage.getItem(\"gitID\"),\n                method: 'get',\n                headers: {\n                    'Authorization' : 'Bearer ' + localStorage.getItem(\"AccessToken\")\n                }\n            }).then((response) => {\n                response.data.forEach(element => {\n                    this.templates.push(element)\n                });\n            }).then(()=> {\n                this.setDefaultInput()\n            })\n            \n        },\n        setDefaultInput() {\n            this.templates.forEach((template) => {\n                document.getElementById(\"templateNumber\" + template.id).value = template.templateNumber\n                document.getElementById(\"templateName\" + template.id).value = template.templateName\n                document.getElementById(\"template\" + template.id).value = template.template\n                document.getElementById(\"hotKey\" + template.id).value = template.hotKey\n            })\n        },\n        setTemplateNumberInput() {\n            \n        },\n        removeTemplate() {\n        },\n        addTemplate(lastNumber) {  \n            this.templateAddCount += 1 \n            const templateToAdd = {\n                id: 'Add' + this.templateAddCount, \n                gitID: this.gitID, \n                templateName: '', \n                templateNumber: lastNumber + 1,\n                template: '',\n                hotKey: ''\n                } \n            console.log(templateToAdd.templateNumber)\n            this.templates.push(templateToAdd)\n            \n        },\n        templateInput(templateId) {\n            document.getElementById(\"template\" + templateId)\n        },\n        biggerTemplateInput() {\n            \n        }\n    }\n})\n</script>\n\n<style scoped>\n    #TemplateBody {\n        text-align: center;\n    }\n\n    input {\n        border-left: none;\n        border-top: none;\n        border-bottom: none;\n        /* border-right; */\n        font-family: 'Courier New', Courier, monospace;\n    }\n    input:focus {\n        outline: none;\n    }\n    .hotKey {\n        border-right: none;\n    }\n    #addTemplateImg {\n        cursor: pointer;\n        height: 1em;\n        vertical-align: middle;\n        margin-right: -1em;\n    }\n    #removeTemplateImg {\n        cursor: pointer;\n        height: 1em;\n        vertical-align: middle;\n        margin-left: 0.27em;\n        margin-right: 0.27em;\n    }\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}