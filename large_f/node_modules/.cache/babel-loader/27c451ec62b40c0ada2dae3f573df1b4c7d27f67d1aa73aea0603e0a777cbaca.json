{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from \"@vue/reactivity\";\nconst axios = require('axios').default;\nexport default {\n  props: [\"IfTokenIsYours\"],\n  setup() {\n    const templates = ref([]);\n    const toEditTemplateNumber = ref(0);\n    const toEditTemplateName = ref(\"\");\n    const toEditTemplate = ref(\"\");\n    const toEditHotKey = ref(\"\");\n    return {\n      templates,\n      toEditTemplateNumber,\n      toEditTemplateName,\n      toEditTemplate,\n      toEditHotKey\n    };\n  },\n  mounted() {\n    this.getAllTemplates();\n    // var inSlash = false \n    // var textarea = document.getElementById(\"textarea\")\n    // // var textarea = document.textarea\n    // textarea.addEventListener('keydown', (e) => {\n    //     if (e.key == \"/\") {\n    //         inSlash = true\n    //     }\n    //     if (inSlash == true) {\n    //         setTimeout(function () {\n    //             console.log(textarea.value.indexOf(\"/http\"))\n    //         }, 100)\n    //     }\n    //     if (e.key == \" \") {\n    //         inSlash = false\n    //     }\n    // })\n  },\n\n  methods: {\n    getAllTemplates() {\n      axios({\n        url: 'http://localhost:8080/template/' + localStorage.getItem(\"gitID\"),\n        method: 'get',\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem(\"AccessToken\")\n        }\n      }).then(response => {\n        response.data.forEach(element => {\n          this.templates.push(element);\n        });\n      });\n    },\n    setDefaultInput() {\n      templates.forEach();\n    }\n  }\n};","map":{"version":3,"mappings":";AAkCA,SAASA,GAAE,QAAS,iBAAgB;AACpC,MAAMC,KAAI,GAAIC,OAAO,CAAC,OAAO,CAAC,CAACC,OAAO;AAEtC,eAAgB;EACZC,KAAK,EAAE,CAAC,gBAAgB,CAAC;EACzBC,KAAK,GAAG;IACJ,MAAMC,SAAQ,GAAIN,GAAG,CAAC,EAAE;IAExB,MAAMO,oBAAmB,GAAIP,GAAG,CAAC,CAAC;IAClC,MAAMQ,kBAAiB,GAAIR,GAAG,CAAC,EAAE;IACjC,MAAMS,cAAa,GAAIT,GAAG,CAAC,EAAE;IAC7B,MAAMU,YAAW,GAAIV,GAAG,CAAC,EAAE;IAE3B,OAAO;MACHM,SAAS;MACTC,oBAAoB;MAAEC,kBAAkB;MAAEC,cAAc;MAAEC;IAE7D;EACL,CAAC;EACDC,OAAO,GAAG;IACN,IAAI,CAACC,eAAe,EAAC;IACrB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC;;EACDC,OAAO,EAAE;IACLD,eAAe,GAAG;MACdX,KAAK,CAAC;QACFa,GAAG,EAAE,iCAAgC,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACtEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,eAAc,EAAI,SAAQ,GAAIH,YAAY,CAACC,OAAO,CAAC,aAAa;QACpE;MACJ,CAAC,CAAC,CAACG,IAAI,CAAEC,QAAQ,IAAK;QAClBA,QAAQ,CAACC,IAAI,CAACC,OAAO,CAACC,OAAM,IAAK;UAC7B,IAAI,CAACjB,SAAS,CAACkB,IAAI,CAACD,OAAO;QAC/B,CAAC,CAAC;MACN,CAAC;IACL,CAAC;IAEDE,eAAe,GAAG;MACdnB,SAAS,CAACgB,OAAO,EAAC;IACtB;EAIJ;AACJ,CAAC","names":["ref","axios","require","default","props","setup","templates","toEditTemplateNumber","toEditTemplateName","toEditTemplate","toEditHotKey","mounted","getAllTemplates","methods","url","localStorage","getItem","method","headers","then","response","data","forEach","element","push","setDefaultInput"],"sourceRoot":"","sources":["/Users/sungjun/Documents/Large/large_f/src/components/NavBar/Preferences/Template/Template.vue"],"sourcesContent":["<template>\n    <div>\n        <div id=\"TemplateBody\" v-if=\"IfTokenIsYours == true\">\n            <br>\n            Templates\n\n            <div v-for=\"template in templates\" :key=\"template.id\">                \n                {{template.templateNumber}} \n                <input :id=\"'templateNumber' + template.id\" size=\"1\" >\n\n                {{template.templateName}} \n                <input :id=\"'templateName' + template.id\" size=\"10\">\n\n                {{template.template}} \n                <input :id=\"'template' + template.id\" size=\"30\">\n\n                {{template.hotKey}} \n                <input :id=\"'hotKey' + template.id\" size=\"15\">\n\n                <br>\n            </div>\n\n            <br>\n            <button @click=\"form()\">button</button>\n            <!-- <textarea id=\"textarea\" cols=\"30\" rows=\"10\"></textarea> -->\n        </div>    \n\n        <div v-else-if=\"IfTokenIsYours == false\">\n            <AccessDenied />\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref } from \"@vue/reactivity\"\nconst axios = require('axios').default;\n\nexport default ({\n    props: [\"IfTokenIsYours\"],\n    setup() {\n        const templates = ref([])\n\n        const toEditTemplateNumber = ref(0)\n        const toEditTemplateName = ref(\"\")\n        const toEditTemplate = ref(\"\")\n        const toEditHotKey = ref(\"\")\n\n        return { \n            templates,\n            toEditTemplateNumber, toEditTemplateName, toEditTemplate, toEditHotKey,\n\n         }\n    },\n    mounted() {\n        this.getAllTemplates()\n        // var inSlash = false \n        // var textarea = document.getElementById(\"textarea\")\n        // // var textarea = document.textarea\n        // textarea.addEventListener('keydown', (e) => {\n        //     if (e.key == \"/\") {\n        //         inSlash = true\n        //     }\n        //     if (inSlash == true) {\n        //         setTimeout(function () {\n        //             console.log(textarea.value.indexOf(\"/http\"))\n        //         }, 100)\n        //     }\n        //     if (e.key == \" \") {\n        //         inSlash = false\n        //     }\n        // })\n    },\n    methods: {\n        getAllTemplates() {\n            axios({\n                url: 'http://localhost:8080/template/' + localStorage.getItem(\"gitID\"),\n                method: 'get',\n                headers: {\n                    'Authorization' : 'Bearer ' + localStorage.getItem(\"AccessToken\")\n                }\n            }).then((response) => {\n                response.data.forEach(element => {\n                    this.templates.push(element)\n                });\n            })\n        },\n\n        setDefaultInput() {\n            templates.forEach()\n        }\n\n\n            \n    }\n})\n</script>\n\n<style scoped>\n    #TemplateBody {\n        text-align: center;\n    }\n\n    input {\n        border: none;\n        font-family: 'Courier New', Courier, monospace;\n    }\n    input:focus {\n        outline: none;\n    }\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}