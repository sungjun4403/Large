{"ast":null,"code":"import axios from 'axios';\nimport { ref } from '@vue/reactivity';\n\n// const axios = require('axios').default\n\nexport default {\n  setup() {\n    const ScrollUp = 0;\n    const IfTokenIsYours = ref(false);\n    return {\n      ScrollUp,\n      IfTokenIsYours\n    };\n  },\n  beforeMount() {\n    this.getIfTokenIsAuthentic();\n  },\n  mounted() {\n    addEventListener(\"mousewheel\", e => {\n      const direction = e.deltaY > 0 ? \"Scroll Down\" : \"Scroll Up\";\n      if (direction == \"Scroll Up\" && window.scrollY == 0) {\n        if (document.getElementById('RealNav').style.display == 'none' && this.ScrollUp > 3) {\n          document.getElementById('RealNav').style.display = 'inline';\n          this.ScrollUp = 0;\n        }\n        this.ScrollUp = this.ScrollUp + 1;\n      }\n      if (direction == \"Scroll Down\") {\n        this.ScrollUp = 0;\n      }\n    });\n    this.close();\n  },\n  methods: {\n    close() {\n      document.getElementById('RealNav').style.display = 'none';\n    },\n    logout() {\n      localStorage.clear();\n    },\n    getIfTokenIsAuthentic() {\n      const AccessToken = localStorage.getItem(\"AccessToken\");\n      const gitID = localStorage.getItem(\"gitID\");\n      axios.post(\"http://localhost:8080/ifTokenIsAuthentic\", {\n        AccessToken: AccessToken,\n        gitID: gitID\n      }).then(response => {\n        this.IfTokenIsYours = response.data;\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAqDA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,GAAE,QAAS,iBAAiB;;AAErC;;AAEA,eAAe;EACXC,KAAK,GAAG;IACJ,MAAMC,QAAO,GAAI,CAAC;IAClB,MAAMC,cAAa,GAAIH,GAAG,CAAC,KAAK;IAChC,OAAO;MAACE,QAAQ;MAAEC;IAAc;EACpC,CAAC;EACDC,WAAW,GAAG;IACV,IAAI,CAACC,qBAAqB,EAAC;EAC/B,CAAC;EACDC,OAAO,GAAG;IACNC,gBAAgB,CAAC,YAAY,EAAEC,KAAK;MAChC,MAAMC,SAAQ,GAAID,CAAC,CAACE,MAAK,GAAI,IAAI,aAAY,GAAI,WAAW;MAC5D,IAAID,SAAQ,IAAK,WAAU,IAAKE,MAAM,CAACC,OAAM,IAAK,CAAC,EAAE;QACjD,IAAIC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACC,KAAK,CAACC,OAAM,IAAK,MAAK,IAAK,IAAI,CAACd,QAAO,GAAI,CAAC,EAAC;UAChFW,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACC,KAAK,CAACC,OAAM,GAAI,QAAO;UAC1D,IAAI,CAACd,QAAO,GAAI,CAAC;QACrB;QACA,IAAI,CAACA,QAAO,GAAI,IAAI,CAACA,QAAO,GAAI,CAAC;MACrC;MAEA,IAAIO,SAAQ,IAAK,aAAa,EAAE;QAC5B,IAAI,CAACP,QAAO,GAAI,CAAC;MACrB;IAEJ,CAAC,CAAC;IACF,IAAI,CAACe,KAAK,EAAC;EACf,CAAC;EACDC,OAAO,EAAE;IACLD,KAAK,GAAG;MACJJ,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACC,KAAK,CAACC,OAAM,GAAI,MAAK;IAC5D,CAAC;IACDG,MAAM,GAAG;MACLC,YAAY,CAACC,KAAK,EAAC;IACvB,CAAC;IACDhB,qBAAqB,GAAG;MACpB,MAAMiB,WAAU,GAAIF,YAAY,CAACG,OAAO,CAAC,aAAa;MACtD,MAAMC,KAAI,GAAIJ,YAAY,CAACG,OAAO,CAAC,OAAO;MAC1CxB,KAAK,CAAC0B,IAAI,CAAC,0CAA0C,EAAE;QACnDH,WAAW,EAAEA,WAAW;QACxBE,KAAK,EAAEA;MACX,CAAC,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACxB,cAAa,GAAIwB,QAAQ,CAACC,IAAG;MACtC,CAAC;IACL;EACJ;AACJ","names":["axios","ref","setup","ScrollUp","IfTokenIsYours","beforeMount","getIfTokenIsAuthentic","mounted","addEventListener","e","direction","deltaY","window","scrollY","document","getElementById","style","display","close","methods","logout","localStorage","clear","AccessToken","getItem","gitID","post","then","response","data"],"sourceRoot":"","sources":["/Users/sungjun/Documents/Large/large_f/src/NavBar.vue"],"sourcesContent":["<template>\n    <div class=\"unselectable\">\n        <div id=\"RealNav\">\n            <div class=\"Nav\" id=\"Nav\">\n                <router-link :to=\"{ name: 'EditProfile', params: { gitID: 'sungjun4403' }}\">\n                    <div class=\"itm\">\n                        <img src=\"../public/assets/image/ProfileIcon.png\" alt=\"Profile Icon\" width=\"40\" class=\"img\"><br>\n                        <span class=\"span5\">Edit Profile</span>\n                    </div>\n                </router-link>\n\n                <router-link to=\"/preferences\">\n                <!-- <router-link to=\"this.$route.params.gitID + '/preferences'\"> -->\n                    <div class=\"itm1\">\n                        <img src=\"../public/assets/image/Preferences.png\" alt=\"Preferences\" width=\"50\" class=\"img\"><br>\n                        <span class=\"span5\">Preferences</span>\n                    </div>\n                </router-link>\n\n                <router-link to=\"/issue_report\">\n                    <div class=\"itm\">\n                        <img src=\"../public/assets/image/IssueReport.png\" alt=\"Issue report\" width=\"40\" class=\"img\"><br>\n                        <span class=\"span5\">Issue Report</span>\n                    </div>\n                </router-link>\n                \n\n            </div>\n\n            <div id=\"close\" class=\"close\" @click=\"close()\">\n                X close\n            </div>\n            \n            <router-link to=\"/\">\n                <button type=\"button\">go to login page</button>\n            </router-link>\n\n            <button type=\"button\" @click=\"logout();\">logout</button>\n\n            <br><br><br>\n\n            <!-- <div v-if=\"true\"> -->\n            \n            \n        </div>\n\n        <router-view />\n\n    </div>\n</template>\n\n\n<script>\nimport axios from 'axios';\nimport { ref } from '@vue/reactivity';\n\n// const axios = require('axios').default\n\nexport default {\n    setup() {\n        const ScrollUp = 0;\n        const IfTokenIsYours = ref(false)\n        return {ScrollUp, IfTokenIsYours}\n    },\n    beforeMount() {\n        this.getIfTokenIsAuthentic()\n    },\n    mounted() {\n        addEventListener(\"mousewheel\", e => {\n            const direction = e.deltaY > 0 ? \"Scroll Down\" : \"Scroll Up\";\n            if (direction == \"Scroll Up\" && window.scrollY == 0) {\n                if (document.getElementById('RealNav').style.display == 'none' && this.ScrollUp > 3){\n                    document.getElementById('RealNav').style.display = 'inline'\n                    this.ScrollUp = 0;\n                }\n                this.ScrollUp = this.ScrollUp + 1;\n            }\n\n            if (direction == \"Scroll Down\") {\n                this.ScrollUp = 0;\n            }    \n            \n        });\n        this.close()\n    },\n    methods: {\n        close() {\n            document.getElementById('RealNav').style.display = 'none'\n        }, \n        logout() {\n            localStorage.clear()\n        },\n        getIfTokenIsAuthentic() {\n            const AccessToken = localStorage.getItem(\"AccessToken\")\n            const gitID = localStorage.getItem(\"gitID\")\n            axios.post(\"http://localhost:8080/ifTokenIsAuthentic\", {\n                AccessToken: AccessToken,\n                gitID: gitID\n            }).then((response) => {\n                this.IfTokenIsYours = response.data\n            })\n        }\n    },\n}\n</script>\n\n\n<style>\n    @import \"../public/assets/css/unselectable.css\";\n\n    #NavBar {\n        font-family: 'Courier New', Courier, monospace;\n    }\n\n    .span5 {\n        cursor: pointer;\n    }\n\n    .itm {\n        width: fit-content;\n    }    \n    \n    .itm1 {\n        width: fit-content;\n        margin-top: 1.6%;\n        margin-bottom: 1.4%;\n        margin-left: 7%;\n        margin-right: 7%;\n    }\n\n    .close {\n        width: fit-content;       \n        background-color: #7B7B7B; \n        padding-top: 0.75%;\n        padding-bottom: 0.75%;\n        padding-right: 1%;\n        padding-left: 1.2%;\n        float: right;\n        cursor: pointer;\n        \n    }\n\n    .img {\n        margin-bottom: 2.2%;\n        cursor: pointer;\n        border-radius: 3px;\n        \n    }\n\n    .Nav {\n        background-color: #D9D9D9;\n        text-align: center;\n    }\n\n    .Nav div {\n        display: inline-block;\n        width: fit-content;\n    }\n\n    div {\n        font-size: large;\n    }\n\n    a:link {\n    color : black;\n    }\n    a:visited {\n    color : black;\n    }\n    a:hover {\n    color : black;\n    }\n    a:active {\n    color : black;\n    }\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}