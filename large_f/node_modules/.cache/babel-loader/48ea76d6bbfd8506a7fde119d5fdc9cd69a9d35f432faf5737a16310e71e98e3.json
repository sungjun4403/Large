{"ast":null,"code":"export default {\n  beforeMount() {},\n  mounted() {\n    const textareaStyle = document.getElementById('textareaStyle');\n    textareaStyle.addEventListener('keydown', e => {\n      if (e.key == ';') {\n        this.renderStyle();\n      } else {\n        console.log('NO RENDER');\n      }\n    });\n  },\n  methods: {\n    renderBody() {\n      var toRenderBody = document.getElementById(\"textareaBody\").value;\n      var RenderedBody = document.getElementById(\"RenderedBody\");\n      RenderedBody.innerHTML = toRenderBody;\n    },\n    renderStyle() {\n      var toRenderStyle = document.getElementById(\"textareaStyle\").value;\n      var css = document.styleSheets[0];\n      css.insertRule(toRenderStyle);\n      console.log('RENDER');\n      console.log(css.cssRules);\n    },\n    renderScript() {}\n  }\n};","map":{"version":3,"mappings":"AAiBA,eAAe;EACXA,WAAW,GAAG,CAEd,CAAC;EAEDC,OAAO,GAAG;IACN,MAAMC,aAAY,GAAIC,QAAQ,CAACC,cAAc,CAAC,eAAe;IAC7DF,aAAa,CAACG,gBAAgB,CAAC,SAAS,EAAGC,CAAC,IAAK;MAC7C,IAAIA,CAAC,CAACC,GAAE,IAAK,GAAG,EAAE;QACd,IAAI,CAACC,WAAW,EAAC;MACrB,OACK;QACDC,OAAO,CAACC,GAAG,CAAC,WAAW;MAC3B;IACJ,CAAC,CAAC;EACN,CAAC;EAEDC,OAAO,EAAE;IACLC,UAAU,GAAG;MACT,IAAIC,YAAW,GAAIV,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAACU,KAAI;MAC/D,IAAIC,YAAW,GAAIZ,QAAQ,CAACC,cAAc,CAAC,cAAc;MACzDW,YAAY,CAACC,SAAQ,GAAIH,YAAW;IAExC,CAAC;IAEDL,WAAW,GAAG;MACV,IAAIS,aAAY,GAAKd,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAACU,KAAI;MAClE,IAAII,GAAE,GAAIf,QAAQ,CAACgB,WAAW,CAAC,CAAC;MAEhCD,GAAG,CAACE,UAAU,CAACH,aAAa;MAC5BR,OAAO,CAACC,GAAG,CAAC,QAAQ;MACpBD,OAAO,CAACC,GAAG,CAACQ,GAAG,CAACG,QAAQ;IAE5B,CAAC;IAEDC,YAAY,GAAG,CAEf;EACJ;AACJ","names":["beforeMount","mounted","textareaStyle","document","getElementById","addEventListener","e","key","renderStyle","console","log","methods","renderBody","toRenderBody","value","RenderedBody","innerHTML","toRenderStyle","css","styleSheets","insertRule","cssRules","renderScript"],"sourceRoot":"","sources":["/Users/sungjun/Documents/Large/large_f/src/toRender.vue"],"sourcesContent":["<template>\n    <textarea id=\"textareaBody\" cols=\"50\" rows=\"20\" v-on:input=\"renderBody()\"></textarea>\n    <textarea id=\"textareaStyle\" cols=\"50\" rows=\"20\" v-on:input=\"renderStyle()\"></textarea>\n    <textarea id=\"textareaScript\" cols=\"50\" rows=\"20\" v-on:input=\"renderScript()\"></textarea>\n    \n    <!-- <a id=\"google\" href=\"https://google.com\">GOOGLE</a>\n    <style> \n        #google {\n            text-decoration: none;\n        } \n    </style>  -->\n</template>\n\n\n              \n\n<script>\nexport default {\n    beforeMount() {\n        \n    },\n\n    mounted() {\n        const textareaStyle = document.getElementById('textareaStyle')\n        textareaStyle.addEventListener('keydown', (e) => {\n            if (e.key == ';') {\n                this.renderStyle()\n            }\n            else {\n                console.log('NO RENDER')\n            }\n        });\n    },\n\n    methods: {\n        renderBody() {            \n            var toRenderBody = document.getElementById(\"textareaBody\").value\n            var RenderedBody = document.getElementById(\"RenderedBody\")\n            RenderedBody.innerHTML = toRenderBody\n            \n        },\n\n        renderStyle() {\n            var toRenderStyle =  document.getElementById(\"textareaStyle\").value\n            var css = document.styleSheets[0]\n                    \n            css.insertRule(toRenderStyle)\n            console.log('RENDER')\n            console.log(css.cssRules)\n\n        }, \n\n        renderScript() {\n\n        },\n    }\n}\n</script>\n\n\n<style id=\"style\">\n    #toRender {\n        /* float: left; */\n        \n        width: 40%;\n        font-family: 'Courier New', Courier, monospace;\n    }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}