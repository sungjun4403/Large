{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"TemplateBody\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createTextVNode(\" Template \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.templates, template => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: template.id\n    }, [_createTextVNode(_toDisplayString(template.TemplateNumber) + \" \" + _toDisplayString(template.TemplateName) + \" \" + _toDisplayString(template.template) + \" \", 1 /* TEXT */), _hoisted_2]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"mappings":";;EACSA,EAAE,EAAC;AAAc;gCAOdC,oBAAI;;;uBAPZC,oBASM,OATNC,UASM,oBATiB,YAGnB,0CAKKC,6BALkBC,gBAAS,EAArBC,QAAQ;yBAAnBJ,oBAKK;MAL8BK,GAAG,EAAED,QAAQ,CAACN;0CAC3CM,QAAQ,CAACE,cAAc,IAAE,GAC3B,oBAAEF,QAAQ,CAACG,YAAY,IAAE,GACzB,oBAAEH,QAAQ,CAACA,QAAQ,IAAE,GACrB,2BAAI","names":["id","_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","$setup","template","key","TemplateNumber","TemplateName"],"sourceRoot":"","sources":["/Users/sungjun/Documents/Large/large_f/src/components/NavBar/Preferences/Template/Template.vue"],"sourcesContent":["<template>\n    <div id=\"TemplateBody\">\n        Template\n\n        <li v-for=\"template in templates\" :key=\"template.id\">\n            {{template.TemplateNumber}}\n            {{template.TemplateName}}\n            {{template.template}}\n            <br>\n        </li>\n    </div>\n</template>\n\n<script>\nimport { ref } from \"@vue/reactivity\"\nconst axios = require('axios').default;\n\nexport default ({\n    setup() {\n        const templates = ref([])\n\n        return { templates }\n    },\n    mounted() {\n        this.getAllTemplates()\n    },\n    methods: {\n        getAllTemplates() {\n            axios({\n                url: 'http://localhost:8080/template/' + localStorage.getItem(\"gitID\"),\n                method: 'get',\n                headers: {\n                    'Authorization' : 'Bearer ' + localStorage.getItem(\"AccessToken\")\n                }\n            }).then((response) => {\n                response.data.forEach(element => {\n                    this.templates.push(element)\n                });\n            })\n        }\n            \n    }\n})\n</script>\n\n<style>\n    #TemplateBody {\n        text-align: center;\n    }\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}