{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"PostBody\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NameNImg = _resolveComponent(\"NameNImg\");\n  const _component_Comments = _resolveComponent(\"Comments\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createTextVNode(\" POST \" + _toDisplayString(_ctx.$route.params.gitID) + \" \" + _toDisplayString(_ctx.$route.params.postId) + \" \", 1 /* TEXT */), _hoisted_2, _createVNode(_component_NameNImg, {\n    comments: $setup.comments\n  }, null, 8 /* PROPS */, [\"comments\"]), _hoisted_3, _createVNode(_component_Comments), _createCommentVNode(\" <div v-if=\\\"comments == true\\\">\\n            <Comments />\\n        </div> \")]);\n}","map":{"version":3,"mappings":";;EACSA,EAAE,EAAC;AAAU;gCAKdC,oBAAI;gCAIJA,oBAAI;;;;;uBATRC,oBAgBM,OAhBNC,UAgBM,oBAhBa,QAEf,oBAAEC,WAAM,CAACC,MAAM,CAACC,KAAK,IAAE,GACvB,oBAAEF,WAAM,CAACC,MAAM,CAACE,MAAM,IAAE,GAExB,2BAAI,EAEJC,aAAuCC;IAAtBC,QAAQ,EAAEC;EAAQ,uCAEnCC,UAAI,EAEJJ,aAAYK,sBAEZC,kGAEU","names":["id","_createElementVNode","_createElementBlock","_hoisted_1","_ctx","params","gitID","postId","_createVNode","_component_NameNImg","comments","$setup","_hoisted_3","_component_Comments","_createCommentVNode"],"sourceRoot":"","sources":["/Users/sungjun/Documents/Large/large_f/src/components/Post/Post.vue"],"sourcesContent":["<template>\n    <div id=\"PostBody\">\n        POST\n        {{$route.params.gitID}}\n        {{$route.params.postId}}\n        \n        <br>\n\n        <NameNImg v-bind:comments=\"comments\" />\n\n        <br>\n\n        <Comments />\n\n        <!-- <div v-if=\"comments == true\">\n            <Comments />\n        </div> -->\n    </div>\n</template>\n\n<script>\nimport { ref } from '@vue/reactivity'\nexport default {\n    props: [\"IfTokenIsYours\"],\n    setup() {\n        const comments = ref(true)\n\n        return {\n            comments,  \n        }\n    },\n    mounted() {\n        console.log(\"comments\")\n\nconsole.log(\"comments\")}\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}