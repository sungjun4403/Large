{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createTextVNode(\" > \")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACAA,oBAEM;;;6DAFNC,UAEM","names":["_createElementVNode","_hoisted_1"],"sourceRoot":"","sources":["/Users/sungjun/Documents/Large/large_f/src/components/NavBar/Preferences/Template/Template.vue"],"sourcesContent":["<template>\n<div>\n\n</div>\n>\n</template>\n\n<script>\nimport { ref } from \"@vue/reactivity\"\nconst axios = require('axios').default;\n\nexport default ({\n    setup() {\n        const templates = ref([])\n\n        return { templates }\n    },\n    mounted() {\n        var inSlash = false\n        this.getAllTemplates()\n        var textarea = document.getElementById(\"textarea\")\n        // var textarea = document.textarea\n        textarea.addEventListener('keydown', (e) => {\n            if (e.key == \"/\") {\n                inSlash = true\n            }\n            if (inSlash == true) {\n                setTimeout(function () {\n                    console.log(textarea.value.indexOf(\"/http\"))\n                }, 100)\n            }\n            if (e.key == \" \") {\n                inSlash = false\n            }\n        })\n    },\n    methods: {\n        getAllTemplates() {\n            axios({\n                url: 'http://localhost:8080/template/' + localStorage.getItem(\"gitID\"),\n                method: 'get',\n                headers: {\n                    'Authorization' : 'Bearer ' + localStorage.getItem(\"AccessToken\")\n                }\n            }).then((response) => {\n                response.data.forEach(element => {\n                    this.templates.push(element)\n                });\n            })\n        }\n            \n    }\n})\n</script>\n\n<style>\n    #TemplateBody {\n        text-align: center;\n    }\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}