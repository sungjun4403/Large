{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4e8a9730\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"StatusIconBody\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    id: \"StatusIcon\",\n    onMouseover: _cache[0] || (_cache[0] = $event => $options.onCursor()),\n    onMouseleave: _cache[1] || (_cache[1] = $event => $options.killCountInterval())\n  }, null, 32 /* HYDRATE_EVENTS */), _createElementVNode(\"span\", null, _toDisplayString($setup.now), 1 /* TEXT */)]);\n}","map":{"version":3,"mappings":";;;EACSA,EAAE,EAAC;AAAgB;;uBAAxBC,oBAGM,OAHNC,UAGM,GAFFC,oBAAqF;IAAhFH,EAAE,EAAC,YAAY;IAAEI,WAAS,sCAAEC,iBAAQ;IAAKC,YAAU,sCAAED,0BAAiB;qCAC3EF,oBAAoB,+BAAZI,UAAG","names":["id","_createElementBlock","_hoisted_1","_createElementVNode","onMouseover","$options","onMouseleave","$setup"],"sourceRoot":"","sources":["/Users/sungjun/Documents/Large/large_f/src/components/User/components/StatusIcon.vue"],"sourcesContent":["<template>\n    <div id=\"StatusIconBody\">\n        <div id=\"StatusIcon\" @mouseover=\"onCursor()\" @mouseleave=\"killCountInterval()\"></div>\n        <span>{{now}}</span>\n    </div>\n    \n</template>\n\n<script>\nimport { ref } from '@vue/reactivity'\nconst moment = require('moment')\nconst currentUrl = window.location.href\n\nvar killCount = false\nvar timeToCount = 0\nlet colors = [\"86FFA2\",\"6BCC82\",\"509961\",\"366641\",\"1B3320\",\"000000\"]\n// second, minute, hour, day, month, year\n\n//now - time = icon bcg color\nexport default {\n    props: ['IconHeight', 'time'],\n    setup() {\n        const now = ref(\"\")\n        const IconTitle = ref(\"none\")\n        \n        const killInterval = ref(false)\n        return {\n            now, IconTitle, killInterval\n        }\n    },\n    mounted() {\n        console.log(window.history)\n        this.setIconHeight()\n        this.now = moment().locale('ko').format('LTS')        \n        \n        setInterval(()=> {\n            this.now = moment().locale('ko').format('LTS')\n            this.setIconColorNTitle()\n\n\n        }, 500)\n        this.onCursor()\n    },\n    methods: {\n        setIconHeight() {\n            const StatusIcon = document.getElementById(\"StatusIcon\")    \n            StatusIcon.style.width = this.IconHeight\n            StatusIcon.style.height = this.IconHeight\n        },\n        setIconColorNTitle() {\n            const fromNow = moment(this.time).fromNow()\n            var i = -1\n            this.IconTitle = fromNow\n            if (fromNow.split(\" \")[2] == \"seconds\" || fromNow.split(\" \")[2] == \"second\") {\n                i = 0\n            }\n            if (fromNow.split(\" \")[1] == \"minutes\" || fromNow.split(\" \")[1] == \"minute\") {\n                i = 1\n            }\n            if (fromNow.split(\" \")[1] == \"hours\" || fromNow.split(\" \")[1] == \"hour\") {\n                i = 2\n            }\n            if (fromNow.split(\" \")[1] == \"days\" || fromNow.split(\" \")[1] == \"day\") {\n                i = 3\n            }\n            if (fromNow.split(\" \")[1] == \"months\" || fromNow.split(\" \")[1] == \"month\") {\n                i = 4\n            }\n            if (fromNow.split(\" \")[1] == \"years\" || fromNow.split(\" \")[1] == \"year\") {\n                i = 5\n            }\n            \n            const StatusIcon = document.getElementById(\"StatusIcon\")        \n            StatusIcon.style.backgroundColor = '#' + colors[i]\n        },\n        onCursor() {\n            killCount = false\n            const StatusIcon = document.getElementById(\"StatusIcon\")\n            \n            StatusIcon.addEventListener(\"mouseover\", function(event) {\n                const mouseover = setInterval(()=> {\n                    if (event.target.id == \"StatusIcon\")  {\n                        timeToCount = timeToCount + 100\n                    }\n                    if (timeToCount >= 2700) {\n                        console.log(\"SHOW!\")                        \n                    }\n                    if (killCount == true) {\n                        timeToCount = 0\n                        clearInterval(mouseover)\n                    }\n                    if (currentUrl != window.location.href) {\n                        console.log(\"NOOOOO\")\n                    } \n                    if (currentUrl == window.location.href) {\n                        console.log(\"YES\")\n                    }\n                }, 100)\n            });\n        },\n        killCountInterval() {\n            killCount = true\n        },\n    },\n}\n</script>\n\n<style scoped>\n    #StatusIcon {\n        width: 100px;\n        height: 100px;\n        background-color: #BEBEBE;\n        border-radius: 50%;\n        display: ;\n    }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}