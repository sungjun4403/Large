{"ast":null,"code":"import { ref } from '@vue/reactivity';\nconst moment = require('moment');\nvar killCount = false;\nvar timeToCount = 0;\nlet colors = [\"86FFA2\", \"6BCC82\", \"509961\", \"366641\", \"1B3320\", \"000000\"];\n// second, minute, hour, day, month, year\n\n//now - time = icon bcg color\nexport default {\n  props: ['IconHeight', 'time'],\n  setup() {\n    const now = ref(\"\");\n    const IconTitle = ref(\"none\");\n    const killInterval = ref(false);\n    return {\n      now,\n      IconTitle,\n      killInterval\n    };\n  },\n  mounted() {\n    this.setIconHeight();\n    this.now = moment().locale('ko').format('LTS');\n    const timeInterval = setInterval(() => {\n      this.now = moment().locale('ko').format('LTS');\n      this.setIconColorNTitle();\n      if (this.killInterval == true) {\n        console.log(\"KILL INTERVAL\");\n        clearInterval(timeInterval);\n      }\n    }, 500);\n  },\n  methods: {\n    setIconHeight() {\n      const StatusIcon = document.getElementById(\"StatusIcon\");\n      StatusIcon.style.width = this.IconHeight;\n      StatusIcon.style.height = this.IconHeight;\n    },\n    setIconColorNTitle() {\n      const fromNow = moment(this.time).fromNow();\n      var i = -1;\n      this.IconTitle = fromNow;\n      if (fromNow.split(\" \")[2] == \"seconds\" || fromNow.split(\" \")[2] == \"second\") {\n        i = 0;\n      }\n      if (fromNow.split(\" \")[1] == \"minutes\" || fromNow.split(\" \")[1] == \"minute\") {\n        i = 1;\n      }\n      if (fromNow.split(\" \")[1] == \"hours\" || fromNow.split(\" \")[1] == \"hour\") {\n        i = 2;\n      }\n      if (fromNow.split(\" \")[1] == \"days\" || fromNow.split(\" \")[1] == \"day\") {\n        i = 3;\n      }\n      if (fromNow.split(\" \")[1] == \"months\" || fromNow.split(\" \")[1] == \"month\") {\n        i = 4;\n      }\n      if (fromNow.split(\" \")[1] == \"years\" || fromNow.split(\" \")[1] == \"year\") {\n        i = 5;\n      }\n      const StatusIcon = document.getElementById(\"StatusIcon\");\n      StatusIcon.style.backgroundColor = '#' + colors[i];\n    },\n    onCursor() {\n      killCount = false;\n      const StatusIcon = document.getElementById(\"StatusIcon\");\n      StatusIcon.addEventListener(\"mouseover\", function (event) {\n        const mouseover = setInterval(() => {\n          if (event.target.id == \"StatusIcon\") {\n            timeToCount = timeToCount + 0.1;\n            console.log(timeToCount);\n          }\n          if (killCount == true) {\n            timeToCount = 0;\n            clearInterval(mouseover);\n          }\n        }, 100);\n      });\n    },\n    killCountInterval() {\n      killCount = true;\n    }\n  },\n  updated() {},\n  unmounted() {\n    console.log(\"UNMOUNTED\");\n    this.killInterval = true;\n  }\n};","map":{"version":3,"mappings":"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","names":["ref","moment","require","killCount","timeToCount","colors","props","setup","now","IconTitle","killInterval","mounted","setIconHeight","locale","format","timeInterval","setInterval","setIconColorNTitle","console","log","clearInterval","methods","StatusIcon","document","getElementById","style","width","IconHeight","height","fromNow","time","i","split","backgroundColor","onCursor","addEventListener","event","mouseover","target","id","killCountInterval","updated","unmounted"],"sourceRoot":"","sources":["/Users/sungjun/Documents/Large/large_f/src/components/User/components/StatusIcon.vue"],"sourcesContent":["<template>\n    <div id=\"StatusIconBody\">\n        <div id=\"StatusIcon\" @mouseover=\"onCursor()\" @mouseleave=\"killCountInterval()\"></div>\n        <span>{{now}}</span>\n    </div>\n    \n</template>\n\n<script>\nimport { ref } from '@vue/reactivity'\nconst moment = require('moment')\n\nvar killCount = false\nvar timeToCount = 0\nlet colors = [\"86FFA2\",\"6BCC82\",\"509961\",\"366641\",\"1B3320\",\"000000\"]\n// second, minute, hour, day, month, year\n\n//now - time = icon bcg color\nexport default {\n    props: ['IconHeight', 'time'],\n    setup() {\n        const now = ref(\"\")\n        const IconTitle = ref(\"none\")\n        \n        const killInterval = ref(false)\n        return {\n            now, IconTitle, killInterval\n        }\n    },\n    mounted() {\n        this.setIconHeight()\n        this.now = moment().locale('ko').format('LTS')        \n        \n        const timeInterval = setInterval(()=> {\n            this.now = moment().locale('ko').format('LTS')\n            this.setIconColorNTitle()\n\n            if (this.killInterval == true) {\n                console.log(\"KILL INTERVAL\")\n                clearInterval(timeInterval)\n            }\n        }, 500)\n    },\n    methods: {\n        setIconHeight() {\n            const StatusIcon = document.getElementById(\"StatusIcon\")    \n            StatusIcon.style.width = this.IconHeight\n            StatusIcon.style.height = this.IconHeight\n        },\n        setIconColorNTitle() {\n            const fromNow = moment(this.time).fromNow()\n            var i = -1\n            this.IconTitle = fromNow\n            if (fromNow.split(\" \")[2] == \"seconds\" || fromNow.split(\" \")[2] == \"second\") {\n                i = 0\n            }\n            if (fromNow.split(\" \")[1] == \"minutes\" || fromNow.split(\" \")[1] == \"minute\") {\n                i = 1\n            }\n            if (fromNow.split(\" \")[1] == \"hours\" || fromNow.split(\" \")[1] == \"hour\") {\n                i = 2\n            }\n            if (fromNow.split(\" \")[1] == \"days\" || fromNow.split(\" \")[1] == \"day\") {\n                i = 3\n            }\n            if (fromNow.split(\" \")[1] == \"months\" || fromNow.split(\" \")[1] == \"month\") {\n                i = 4\n            }\n            if (fromNow.split(\" \")[1] == \"years\" || fromNow.split(\" \")[1] == \"year\") {\n                i = 5\n            }\n            \n            const StatusIcon = document.getElementById(\"StatusIcon\")        \n            StatusIcon.style.backgroundColor = '#' + colors[i]\n        },\n        onCursor() {\n            killCount = false\n            const StatusIcon = document.getElementById(\"StatusIcon\")\n            \n            StatusIcon.addEventListener(\"mouseover\", function(event) {\n                const mouseover = setInterval(()=> {\n                    if (event.target.id == \"StatusIcon\")  {\n                        timeToCount = timeToCount + 0.1\n                        console.log(timeToCount)\n                    }\n\n                    if (killCount == true) {\n                        timeToCount = 0\n                        clearInterval(mouseover)\n                    }\n                }, 100)\n            });\n        },\n        killCountInterval() {\n            killCount = true\n        },\n    },\n    updated() {\n        \n    },\n    unmounted() {\n        console.log(\"UNMOUNTED\")\n        this.killInterval = true\n    }\n}\n</script>\n\n<style scoped>\n    #StatusIcon {\n        width: 100px;\n        height: 100px;\n        background-color: #BEBEBE;\n        border-radius: 50%;\n    }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}