{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"body\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.posts, post => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: post.id\n    }, [_createTextVNode(_toDisplayString(post.title) + \" / \" + _toDisplayString(post.body) + \" / \" + _toDisplayString(post.ifAds) + \" \", 1 /* TEXT */), _hoisted_2]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"mappings":";;EACSA,EAAE,EAAC;AAAM;gCAKNC,oBAAI;;;uBALZC,oBAOM,OAPNC,UAOM,sBANFD,oBAKKE,6BALcC,YAAK,EAAbC,IAAI;yBAAfJ,oBAKK;MALsBK,GAAG,EAAED,IAAI,CAACN;0CAC/BM,IAAI,CAACE,KAAK,IAAE,KACd,oBAAEF,IAAI,CAACG,IAAI,IAAE,KACb,oBAAEH,IAAI,CAACI,KAAK,IAAE,GACd,2BAAI","names":["id","_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","$setup","post","key","title","body","ifAds"],"sourceRoot":"","sources":["/Users/sungjun/Documents/Large/large_f/src/components/Post/PostViewAll.vue"],"sourcesContent":["<template>\n    <div id=\"body\">\n        <li v-for=\"post in posts\" :key=\"post.id\">\n            {{post.title}} /\n            {{post.body}} /\n            {{post.ifAds}} \n            <br>\n        </li>\n    </div>\n\n    \n</template>\n\n<script>\n// import { ref } from \"@vue/reactivity\";\nimport { ref } from '@vue/reactivity';\nconst axios = require('axios').default;\n\nexport default ({\n\n    setup() {\n        const posts = ref([])\n\n        return {posts}\n    },\n\n    mounted() {\n        this.getAllPosts();\n    },\n\n    methods: {\n        getAllPosts() {\n            axios.get(\"https://large-devlog.com/post\").then((response) => {\n                response.data.forEach(element => {\n                    this.posts.push(element)\n                });\n            })\n        },\n    },\n});\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}