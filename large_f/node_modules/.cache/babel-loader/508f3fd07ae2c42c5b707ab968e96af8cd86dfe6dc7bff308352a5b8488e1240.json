{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4e8a9730\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"StatusIconBody\"\n};\nconst _hoisted_2 = [\"title\"];\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", null, \"HOW\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    id: \"StatusIcon\",\n    title: $setup.IconTitle\n  }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"span\", null, _toDisplayString($setup.now), 1 /* TEXT */), _createTextVNode(\" \" + _toDisplayString($props.IconHeight) + \" \", 1 /* TEXT */), _createElementVNode(\"input\", {\n    id: \"i\",\n    onInput: _cache[0] || (_cache[0] = $event => $options.setIconColor())\n  }, null, 32 /* HYDRATE_EVENTS */), _hoisted_3]);\n}","map":{"version":3,"mappings":";;;EACSA,EAAE,EAAC;AAAgB;;gEAKpBC,oBAAoB,gBAAZ,KAAG;;;uBALfC,oBAMM,OANNC,UAMM,GALFF,oBAA8C;IAAzCD,EAAE,EAAC,YAAY;IAAEI,KAAK,EAAEC;uCAC7BJ,oBAAoB,+BAAZI,UAAG,mCAAS,GACpB,oBAAEC,iBAAU,IAAE,GACd,qCAAsC;IAA/BN,EAAE,EAAC,GAAG;IAAEO,OAAK,sCAAEC,qBAAY;qCAClCC,UAAoB","names":["id","_createElementVNode","_createElementBlock","_hoisted_1","title","$setup","$props","onInput","$options","_hoisted_3"],"sourceRoot":"","sources":["/Users/sungjun/Documents/Large/large_f/src/components/User/components/StatusIcon.vue"],"sourcesContent":["<template>\n    <div id=\"StatusIconBody\" >\n        <div id=\"StatusIcon\" :title=\"IconTitle\"></div>\n        <span>{{now}}</span>\n        {{IconHeight}}\n        <input id=\"i\" @input=\"setIconColor()\">\n        <button>HOW</button>\n    </div>\n    \n</template>\n\n<script>\nimport { ref } from '@vue/reactivity'\nconst moment = require('moment')\nlet colors = ['#A8F368', '#B6CB66', '#C3A365', '#D17B63', '#DE5361', '#EC2B60', '#F9035E']\n\n//now - time = icon bcg color\nexport default {\n    props: ['IconHeight', 'LastModifiedDate', 'CreateDate'],\n    setup() {\n        const now = ref(\"\")\n        const IconTitle = ref(\"none\")\n        \n        return {\n            now, IconTitle,\n        }\n    },\n    mounted() {\n        this.now = moment().locale('ko').format('LTS')        \n        \n        setInterval(()=> {\n            this.now = moment().locale('ko').format('LTS')\n        }, 500)\n\n        this.setIconHeight()\n    },\n    methods: {\n        setIconHeight() {\n            const StatusIcon = document.getElementById(\"StatusIcon\")    \n            \n            StatusIcon.style.width = this.IconHeight\n            StatusIcon.style.height = this.IconHeight\n        },\n        setIconColor() {\n            const it = document.getElementById(\"i\").value\n            const i = parseInt(it)\n            const StatusIcon = document.getElementById(\"StatusIcon\")        \n            StatusIcon.style.backgroundColor = colors[i]\n        }\n    },\n    updated() {\n        \n    }\n}\n</script>\n\n<style scoped>\n    #StatusIcon {\n        width: 100px;\n        height: 100px;\n        background-color: #A8F368;\n        border-radius: 50%;\n    }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}